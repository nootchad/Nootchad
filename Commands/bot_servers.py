
"""
Comando para ver en qu√© servidores est√° el bot de Discord
Muestra informaci√≥n detallada sobre cada servidor
"""
import discord
from discord.ext import commands
import logging
from datetime import datetime

logger = logging.getLogger(__name__)

def setup_commands(bot):
    """Funci√≥n requerida para configurar el comando de servidores del bot"""
    
    @bot.tree.command(name="botservers", description="Ver en qu√© servidores est√° el bot actualmente")
    async def botservers_command(interaction: discord.Interaction):
        """Mostrar informaci√≥n sobre los servidores donde est√° el bot"""
        user_id = str(interaction.user.id)
        username = f"{interaction.user.name}#{interaction.user.discriminator}"
        
        # Verificar que solo el owner o delegados puedan usar este comando
        from main import is_owner_or_delegated
        if not is_owner_or_delegated(user_id):
            embed = discord.Embed(
                title="‚ùå Acceso Denegado",
                description="Este comando solo puede ser usado por el owner del bot o usuarios con acceso delegado.",
                color=0xff0000
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return
        
        await interaction.response.defer(ephemeral=True)
        
        try:
            guilds = bot.guilds
            total_guilds = len(guilds)
            total_members = sum(guild.member_count for guild in guilds if guild.member_count)
            
            # Crear embed principal
            embed = discord.Embed(
                title="<a:pepebot:1418489370129993728> Servidores del Bot RbxServers",
                description=f"El bot est√° activo en **{total_guilds}** servidores con un total de **{total_members:,}** miembros.",
                color=0x00ff88
            )
            
            # Estad√≠sticas generales
            embed.add_field(
                name="<:stats:1418490788437823599> Estad√≠sticas Generales",
                value=f"‚Ä¢ **Total Servidores:** {total_guilds}\n‚Ä¢ **Total Miembros:** {total_members:,}\n‚Ä¢ **Promedio por Servidor:** {total_members // total_guilds if total_guilds > 0 else 0} miembros",
                inline=False
            )
            
            # Ordenar servidores por cantidad de miembros (m√°s grandes primero)
            sorted_guilds = sorted(guilds, key=lambda g: g.member_count or 0, reverse=True)
            
            # Mostrar top 10 servidores m√°s grandes
            if sorted_guilds:
                top_servers = ""
                for i, guild in enumerate(sorted_guilds[:10], 1):
                    member_count = guild.member_count or 0
                    owner_name = guild.owner.name if guild.owner else "Desconocido"
                    
                    # Emoji basado en tama√±o del servidor
                    if member_count > 1000:
                        emoji = "üè∞"
                    elif member_count > 500:
                        emoji = "üè¢"
                    elif member_count > 100:
                        emoji = "üè†"
                    else:
                        emoji = "üè™"
                    
                    top_servers += f"{emoji} **{guild.name}**\n"
                    top_servers += f"   ‚îî {member_count:,} miembros ‚Ä¢ Owner: {owner_name}\n"
                    top_servers += f"   ‚îî ID: `{guild.id}`\n\n"
                
                embed.add_field(
                    name="üèÜ Top 10 Servidores (Por Miembros)",
                    value=top_servers,
                    inline=False
                )
            
            # Informaci√≥n t√©cnica
            embed.add_field(
                name="‚öôÔ∏è Informaci√≥n T√©cnica",
                value=f"‚Ä¢ **Bot ID:** `{bot.user.id}`\n‚Ä¢ **Bot Tag:** `{bot.user.name}#{bot.user.discriminator}`\n‚Ä¢ **Latencia:** {round(bot.latency * 1000)}ms",
                inline=True
            )
            
            # Permisos comunes
            total_admin_servers = sum(1 for guild in guilds if guild.me.guild_permissions.administrator)
            embed.add_field(
                name="üîê Permisos",
                value=f"‚Ä¢ **Admin en:** {total_admin_servers} servidores\n‚Ä¢ **Sin Admin:** {total_guilds - total_admin_servers} servidores",
                inline=True
            )
            
            # Fecha de creaci√≥n del bot
            bot_created = bot.user.created_at
            embed.add_field(
                name="üìÖ Creaci√≥n del Bot",
                value=f"<t:{int(bot_created.timestamp())}:F>\n(<t:{int(bot_created.timestamp())}:R>)",
                inline=True
            )
            
            embed.set_footer(text=f"Consultado por {username} ‚Ä¢ {datetime.now().strftime('%d/%m/%Y %H:%M:%S')}")
            embed.set_thumbnail(url=bot.user.display_avatar.url)
            
            await interaction.followup.send(embed=embed, ephemeral=True)
            
            # Si hay muchos servidores, enviar lista completa en un segundo embed
            if total_guilds > 10:
                all_servers_text = ""
                for guild in sorted_guilds:
                    member_count = guild.member_count or 0
                    all_servers_text += f"‚Ä¢ **{guild.name}** ({member_count:,} miembros) - `{guild.id}`\n"
                
                # Dividir en chunks si es muy largo
                if len(all_servers_text) > 4000:
                    chunks = [all_servers_text[i:i+3800] for i in range(0, len(all_servers_text), 3800)]
                    
                    for i, chunk in enumerate(chunks[:3]):  # M√°ximo 3 chunks
                        chunk_embed = discord.Embed(
                            title=f"üìã Lista Completa de Servidores (Parte {i+1})",
                            description=chunk,
                            color=0x3366ff
                        )
                        await interaction.followup.send(embed=chunk_embed, ephemeral=True)
                        
                        if i == 2 and len(chunks) > 3:
                            remaining_embed = discord.Embed(
                                title="‚ö†Ô∏è Lista Truncada",
                                description=f"Se muestran los primeros {(i+1) * 3800} caracteres. Hay {len(chunks) - 3} partes m√°s.",
                                color=0xff9900
                            )
                            await interaction.followup.send(embed=remaining_embed, ephemeral=True)
                            break
                else:
                    complete_embed = discord.Embed(
                        title="üìã Lista Completa de Servidores",
                        description=all_servers_text,
                        color=0x3366ff
                    )
                    await interaction.followup.send(embed=complete_embed, ephemeral=True)
            
            logger.info(f"Owner {username} consult√≥ informaci√≥n de servidores del bot: {total_guilds} servidores, {total_members} miembros")
            
        except Exception as e:
            logger.error(f"Error en comando botservers: {e}")
            error_embed = discord.Embed(
                title="‚ùå Error",
                description="Ocurri√≥ un error al obtener la informaci√≥n de los servidores.",
                color=0xff0000
            )
            error_embed.add_field(name="üêõ Error", value=f"```{str(e)[:200]}```", inline=False)
            await interaction.followup.send(embed=error_embed, ephemeral=True)
    
    @bot.tree.command(name="serverinfo", description="[OWNER ONLY] Ver informaci√≥n detallada de un servidor espec√≠fico")
    async def serverinfo_command(interaction: discord.Interaction, server_id: str):
        """Ver informaci√≥n detallada de un servidor espec√≠fico por ID"""
        user_id = str(interaction.user.id)
        username = f"{interaction.user.name}#{interaction.user.discriminator}"
        
        # Verificar que solo el owner o delegados puedan usar este comando
        from main import is_owner_or_delegated
        if not is_owner_or_delegated(user_id):
            embed = discord.Embed(
                title="‚ùå Acceso Denegado",
                description="Este comando solo puede ser usado por el owner del bot o usuarios con acceso delegado.",
                color=0xff0000
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return
        
        await interaction.response.defer(ephemeral=True)
        
        try:
            # Validar que el server_id sea un n√∫mero
            try:
                guild_id = int(server_id)
            except ValueError:
                embed = discord.Embed(
                    title="‚ùå ID Inv√°lido",
                    description="El ID del servidor debe ser un n√∫mero v√°lido.",
                    color=0xff0000
                )
                await interaction.followup.send(embed=embed, ephemeral=True)
                return
            
            # Buscar el servidor
            guild = bot.get_guild(guild_id)
            if not guild:
                embed = discord.Embed(
                    title="‚ùå Servidor No Encontrado",
                    description=f"El bot no est√° en el servidor con ID `{server_id}` o el servidor no existe.",
                    color=0xff0000
                )
                await interaction.followup.send(embed=embed, ephemeral=True)
                return
            
            # Crear embed con informaci√≥n detallada
            embed = discord.Embed(
                title=f"üè∞ Informaci√≥n del Servidor: {guild.name}",
                description=f"Informaci√≥n detallada del servidor **{guild.name}**",
                color=0x00aaff
            )
            
            # Informaci√≥n b√°sica
            embed.add_field(
                name="üìã Informaci√≥n B√°sica",
                value=f"‚Ä¢ **Nombre:** {guild.name}\n‚Ä¢ **ID:** `{guild.id}`\n‚Ä¢ **Miembros:** {guild.member_count:,}\n‚Ä¢ **Creado:** <t:{int(guild.created_at.timestamp())}:F>",
                inline=False
            )
            
            # Owner informaci√≥n
            owner_info = "Desconocido"
            if guild.owner:
                owner_info = f"{guild.owner.name}#{guild.owner.discriminator}\nID: `{guild.owner.id}`"
            
            embed.add_field(
                name="üëë Owner",
                value=owner_info,
                inline=True
            )
            
            # Informaci√≥n de canales
            text_channels = len(guild.text_channels)
            voice_channels = len(guild.voice_channels)
            categories = len(guild.categories)
            
            embed.add_field(
                name="üì∫ Canales",
                value=f"‚Ä¢ **Texto:** {text_channels}\n‚Ä¢ **Voz:** {voice_channels}\n‚Ä¢ **Categor√≠as:** {categories}",
                inline=True
            )
            
            # Roles
            roles_count = len(guild.roles)
            embed.add_field(
                name="üé≠ Roles",
                value=f"‚Ä¢ **Total:** {roles_count}\n‚Ä¢ **M√°ximo:** {guild.max_members or 'Ilimitado'}",
                inline=True
            )
            
            # Informaci√≥n del bot en el servidor
            bot_member = guild.me
            joined_at = bot_member.joined_at
            permissions = bot_member.guild_permissions
            
            embed.add_field(
                name="<a:pepebot:1418489370129993728> Bot en el Servidor",
                value=f"‚Ä¢ **Se uni√≥:** <t:{int(joined_at.timestamp())}:F>\n‚Ä¢ **Admin:** {'<a:verify2:1418486831993061497>' if permissions.administrator else '‚ùå'}\n‚Ä¢ **Nickname:** {bot_member.display_name}",
                inline=False
            )
            
            # Permisos importantes
            important_perms = []
            if permissions.administrator:
                important_perms.append("<a:verify2:1418486831993061497> Administrador")
            else:
                if permissions.manage_guild:
                    important_perms.append("<a:verify2:1418486831993061497> Gestionar Servidor")
                if permissions.manage_channels:
                    important_perms.append("<a:verify2:1418486831993061497> Gestionar Canales")
                if permissions.manage_roles:
                    important_perms.append("<a:verify2:1418486831993061497> Gestionar Roles")
                if permissions.send_messages:
                    important_perms.append("<a:verify2:1418486831993061497> Enviar Mensajes")
                if permissions.embed_links:
                    important_perms.append("<a:verify2:1418486831993061497> Insertar Enlaces")
                if not permissions.send_messages:
                    important_perms.append("‚ùå Enviar Mensajes")
                if not permissions.embed_links:
                    important_perms.append("‚ùå Insertar Enlaces")
            
            if important_perms:
                embed.add_field(
                    name="üîê Permisos Importantes",
                    value="\n".join(important_perms[:8]),  # M√°ximo 8 permisos
                    inline=True
                )
            
            # Caracter√≠sticas del servidor
            features = []
            if guild.premium_tier > 0:
                features.append(f"üíé Boost Nivel {guild.premium_tier}")
            if guild.verification_level != discord.VerificationLevel.none:
                features.append(f"üîí Verificaci√≥n: {guild.verification_level.name}")
            if guild.explicit_content_filter != discord.ContentFilter.disabled:
                features.append("üîû Filtro de Contenido")
            
            if features:
                embed.add_field(
                    name="‚ú® Caracter√≠sticas",
                    value="\n".join(features),
                    inline=True
                )
            
            # Establecer imagen del servidor si tiene
            if guild.icon:
                embed.set_thumbnail(url=guild.icon.url)
            
            embed.set_footer(text=f"Consultado por {username}")
            
            await interaction.followup.send(embed=embed, ephemeral=True)
            
            logger.info(f"Owner {username} consult√≥ informaci√≥n detallada del servidor {guild.name} (ID: {guild.id})")
            
        except Exception as e:
            logger.error(f"Error en comando serverinfo: {e}")
            error_embed = discord.Embed(
                title="‚ùå Error",
                description="Ocurri√≥ un error al obtener la informaci√≥n del servidor.",
                color=0xff0000
            )
            error_embed.add_field(name="üêõ Error", value=f"```{str(e)[:200]}```", inline=False)
            await interaction.followup.send(embed=error_embed, ephemeral=True)
    
    logger.info("<a:verify2:1418486831993061497> Comandos de informaci√≥n de servidores configurados")
    return True

def cleanup_commands(bot):
    """Funci√≥n de limpieza opcional"""
    pass
