
"""
Comando /update para mostrar las √∫ltimas actualizaciones del bot RbxServers
"""
import discord
from discord.ext import commands
import logging
from datetime import datetime

logger = logging.getLogger(__name__)

def setup_commands(bot):
    """Funci√≥n requerida para configurar comandos"""
    
    @bot.tree.command(name="update", description="Ver las √∫ltimas actualizaciones del bot RbxServers")
    async def update_command(interaction: discord.Interaction):
        """Mostrar las √∫ltimas actualizaciones del bot"""
        try:
            # Crear embed principal de actualizaciones
            embed = discord.Embed(
                title="üöÄ RbxServers - Nueva Actualizaci√≥n Disponible",
                description="¬°Conoce todas las nuevas funcionalidades que hemos a√±adido al bot!",
                color=0x00ff88,
                timestamp=datetime.now()
            )
            
            # Versi√≥n actual
            embed.add_field(
                name="üì± Versi√≥n Actual",
                value="**v3.0.0** - Julio 2025",
                inline=True
            )
            
            # Estado del bot
            embed.add_field(
                name="üü¢ Estado",
                value="**Estable** - Totalmente operativo",
                inline=True
            )
            
            # √öltima actualizaci√≥n
            embed.add_field(
                name="üìÖ √öltima Actualizaci√≥n",
                value="<t:1737849600:R>",  # Timestamp relativo
                inline=True
            )
            
            # Comando /autoscrape
            embed.add_field(
                name="üîÑ Nuevo: Comando `/autoscrape`",
                value="""
                **Auto Scraping Inteligente**
                ‚Ä¢ Busca autom√°ticamente servidores VIP para ti
                ‚Ä¢ Especifica hasta 2 juegos simult√°neamente
                ‚Ä¢ Sistema de cooldowns autom√°ticos cada 5 servidores
                ‚Ä¢ Obt√©n hasta 20 servidores en una sola ejecuci√≥n
                ‚Ä¢ Entrega por mensaje privado para mayor privacidad
                
                **Uso:** `/autoscrape game_id:123456 cantidad:10 game_id2:789012`
                """,
                inline=False
            )
            
            # Comando /music
            embed.add_field(
                name="üéµ Nuevo: Comando `/music`",
                value="""
                **Generador de M√∫sica con IA**
                ‚Ä¢ Crea m√∫sica √∫nica usando RbxServers-v1 Music AI
                ‚Ä¢ Describe tu m√∫sica y la IA la generar√°
                ‚Ä¢ Duraci√≥n personalizable (5-300 segundos)
                ‚Ä¢ **PREMIUM:** Los usuarios premium pueden reproducir la m√∫sica directamente en Roblox mediante el bot
                ‚Ä¢ Formato MP3 de alta calidad para descarga
                
                **Uso:** `/music descripcion:"rock √©pico" duracion:60`
                """,
                inline=False
            )
            
            # Comando /leaderboard
            embed.add_field(
                name="üèÜ Nuevo: Comando `/leaderboard`",
                value="""
                **Sistema de Ranking Competitivo**
                ‚Ä¢ Ranking semanal e hist√≥rico de usuarios
                ‚Ä¢ Basado en servidores VIP acumulados (sin l√≠mites)
                ‚Ä¢ Reinicio autom√°tico cada lunes
                ‚Ä¢ **Recompensas Semanales:**
                  ü•á **1er lugar:** 400 monedas + Cuenta Crunchyroll Premium
                  ü•à **2do lugar:** 250 monedas + Cuenta Crunchyroll Premium  
                  ü•â **3er lugar:** 150 monedas + Cuenta Crunchyroll Premium
                
                **Uso:** `/leaderboard tipo:semanal` o `/leaderboard tipo:historico`
                """,
                inline=False
            )
            
            # Mejoras t√©cnicas
            embed.add_field(
                name="‚öôÔ∏è Mejoras T√©cnicas Importantes",
                value="""
                ‚Ä¢ **Sistema de Comandos Din√°micos** - Carga autom√°tica desde carpeta Commands/
                ‚Ä¢ **Optimizaci√≥n de Scraping** - 60% m√°s r√°pido con cookies autom√°ticas
                ‚Ä¢ **API Web Expandida** - Nuevos endpoints para desarrolladores
                ‚Ä¢ **Sistema Anti-Alt Avanzado** - Detecci√≥n mejorada de cuentas falsas
                ‚Ä¢ **Manejo de Errores Robusto** - Menos timeouts y errores inesperados
                ‚Ä¢ **Base de Datos Simplificada** - Estructura m√°s eficiente en user_game_servers.json
                """,
                inline=False
            )
            
            # Funciones premium
            embed.add_field(
                name="‚≠ê Funciones Premium Destacadas",
                value="""
                ‚Ä¢ **Reproducci√≥n de M√∫sica en Roblox** - Tu m√∫sica generada directo en el juego
                ‚Ä¢ **Auto Scraping Ilimitado** - Sin cooldowns ni restricciones
                ‚Ä¢ **Prioridad en Comandos** - Procesamiento m√°s r√°pido
                ‚Ä¢ **Acceso Anticipado** - Nuevas funciones antes que otros usuarios
                ‚Ä¢ **Soporte Premium** - Atenci√≥n prioritaria
                """,
                inline=False
            )
            
            # Pr√≥ximas actualizaciones
            embed.add_field(
                name="üöÄ Pr√≥ximamente en v3.1.0",
                value="""
                ‚Ä¢ **Sistema de Guilds** - Clanes y grupos de usuarios
                ‚Ä¢ **Modo Competitivo** - Torneos y eventos especiales
                ‚Ä¢ **Dashboard Web Completo** - Panel de control total
                ‚Ä¢ **Sistema de Notificaciones Push** - Alertas en tiempo real
                ‚Ä¢ **Integraci√≥n con Spotify** - Exporta tu m√∫sica generada
                ‚Ä¢ **Marketplace Expandido** - Intercambio de servidores entre usuarios
                """,
                inline=False
            )
            
            # Enlaces √∫tiles
            embed.add_field(
                name="üîó Enlaces y Recursos",
                value="""
                ‚Ä¢ [üìö Documentaci√≥n API](https://workspace-paysencharlee.replit.dev/api/)
                ‚Ä¢ [üåê Dashboard Web](https://workspace-paysencharlee.replit.dev/)
                ‚Ä¢ [üìä Estado del Servidor](https://workspace-paysencharlee.replit.dev/api/status)
                ‚Ä¢ [üéØ Reportar Bugs](https://discord.com/) 
                ‚Ä¢ [üíé Obtener Premium](https://discord.com/)
                """,
                inline=False
            )
            
            # Agradecimientos especiales
            embed.add_field(
                name="üôè Agradecimientos Especiales",
                value="""
                Gracias a toda la comunidad por su apoyo constante y feedback valioso. 
                Esta actualizaci√≥n incluye muchas de las sugerencias que nos han enviado.
                
                **¬°Sigan enviando sus ideas para las pr√≥ximas actualizaciones!**
                """,
                inline=False
            )
            
            # Footer con informaci√≥n adicional
            embed.set_footer(
                text="RbxServers v3.0.0 ‚Ä¢ Desarrollado por Hesiz ‚Ä¢ Powered by Hesiz",
                icon_url="https://rbxservers.xyz/svgs/roblox.svg"
            )
            
            # Thumbnail del bot
            embed.set_thumbnail(url="https://rbxservers.xyz/svgs/roblox.svg")
            
            # Responder con el embed
            await interaction.response.send_message(embed=embed, ephemeral=False)
            
            # Log del uso del comando
            username = f"{interaction.user.name}#{interaction.user.discriminator}"
            user_id = str(interaction.user.id)
            logger.info(f"Usuario {username} (ID: {user_id}) us√≥ comando /update")
            
            # Dar monedas por usar el comando (si el sistema est√° disponible)
            try:
                # Importar el sistema de monedas din√°micamente
                import sys
                if 'coins_system' in sys.modules:
                    coins_system = sys.modules['coins_system']
                    if hasattr(coins_system, 'add_coins'):
                        coins_system.add_coins(user_id, 5, "Ver actualizaciones del bot")
            except Exception as e:
                logger.debug(f"Error agregando monedas autom√°ticas: {e}")
        
        except Exception as e:
            logger.error(f"Error en comando /update: {e}")
            
            # Embed de error
            error_embed = discord.Embed(
                title="‚ùå Error",
                description="Ocurri√≥ un error al cargar las actualizaciones.",
                color=0xff0000
            )
            error_embed.add_field(
                name="üîß Soluci√≥n",
                value="Int√©ntalo nuevamente en unos segundos.",
                inline=False
            )
            
            # Responder con error si no se ha respondido a√∫n
            if not interaction.response.is_done():
                await interaction.response.send_message(embed=error_embed, ephemeral=True)
            else:
                await interaction.followup.send(embed=error_embed, ephemeral=True)
    
    logger.info("‚úÖ Comando /update configurado exitosamente")
    return True

def cleanup_commands(bot):
    """Funci√≥n opcional para limpiar comandos al recargar"""
    pass
